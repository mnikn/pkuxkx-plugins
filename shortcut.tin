#var shortcut[META] {
	{NAME} {shortcut}
	{DESC} {通用快捷键}
	{AUTHOR} {mnikn}
}

#func shortcut.Init {
	#return true;
}


#alias auto-xue {
	#var auto-xue-target-person %1;
	#var auto-xue-target-skill %2;
	#var auto-xue-times 10;

	#echo 自动学习开始！;
	#tick auto-xue-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		
		#if {$char[HP][当前精神] > 80} {
			xue $auto-xue-target-person for $auto-xue-target-skill $auto-xue-times;
		};
		#else {
			#if {$char[HP][当前内力] < 50} {
				#return;	
			};
			#if {$char[HP][内力百分比] > 45} {
				yun regenerate;
			};
		};
		
	} 1;

	#act {缺乏实战经验} {remove-auto-xue;};
}
#alias remove-auto-xue {
	#untick auto-xue-ticker;
	#echo 自动学习结束！; 
}

#alias auto-xuem {
	#var auto-xue-target-person %1;
	#var auto-xue-target-skill %2;
	#var auto-xue-times 10;

	#echo 自动学习开始！;
	#tick auto-xuem-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};


		recover-jin;

		#if {$char[HP][当前精神] > 1} {
			xue $auto-xue-target-person for $auto-xue-target-skill @math.Min{$char[HP][当前精神];50};
		}
	} 2;
}
#alias remove-auto-xuem {
	#untick auto-xuem-ticker;
	remove-auto-dazuo;
}

#alias sshu {
	study blade book for 5
}
#alias auto-study {
	#var auto-study-target %1;
	#var auto-xue-times 5;

	#echo 自动学习开始！;
	#tick auto-study-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		
		#if {$char[HP][当前精神] > 70} {
			study $auto-study-target for $auto-xue-times;
		};
		#else {
			#if {$char[HP][内力百分比] == 50} {
				yun regenerate;
				#return;	
			};
			sleep;
		};
	} 1;
}
#alias remove-auto-study {
	#untick auto-study-ticker;
	#echo 自动学习结束！; 
}

#alias auto-studym {
	#var auto-study-book %1;
	#var auto-study-times 5;

	#echo 自动学习开始！;
	#tick auto-studym-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		recover-jin;

		#if {$char[HP][当前精神] > 100} {
			study $auto-study-book for $auto-study-times;
			#return;
		};
	} 2;
}
#alias remove-auto-studym {
	#untick auto-studym-ticker;
	remove-auto-dazuo;
}

#alias recover-jin {
	#if {$char[HP][气血百分比] >= 20 && $char[HP][内力百分比] < 99 && $char[HP][当前精神] > 100} {
		dazuo max;
		#return;
	};

	#if {$char[HP][当前内力] >= 50 && $char[HP][当前精神] < 100} {
		yun regenerate;
		#return;
	};

	
	#if {$char[HP][精神百分比] <= 20 && $char[HP][内力百分比] <= 20} {
		sleep;
		#return;
	};
}

#alias check-sleep {
	#if {$char[HP][精神百分比] <= 20 && $char[HP][气血百分比] <= 20 && $char[HP][内力百分比] <= 20} {
		sleep;
		#return;
	};
}

#alias auto-dazuo-inc {
	okLog 自动打坐内力增长开始！;
	#tick auto-dazuo-inc-ticker {
		#if {@char.IsBusy{} || $char[HP][当前精神] < 99} {
			#return;
		};
		#action {你现在内力接近圆满} {
			#if {@char.IsBusy{}} {
				#return;
			};
			dazuo 10;
			#if {$char[HP][气血百分比] < 30} {
				sshum;
				sleep;
			};
		};

		
		#if {$char[HP][气血百分比] < 30 && $char[HP][内力百分比] < 60} {
			sshum;
			sleep;
			#return;
		};

		
		#if { $char[HP][内力百分比] < 99 } {
        		dazuo max;
    		};
		#else {
        		dazuo 10;
			#if {$char[HP][气血百分比] < 30} {
				sshum;
				sleep;
			};
		};
		
	} 2;
}
#alias remove-auto-dazuo-inc {
	okLog 自动打坐内力增长结束！;
	#untick auto-dazuo-inc-ticker;
	#unaction {无法产生内息运行全身经脉。$};
	#unaction {你现在内力接近圆满};
}

#alias sshum {
	sshu;
	sshu;
	sshu;
	sshu;
	sshu;
	sshu;
	sshu;
	sshu;
	sshu;
}

#alias auto-dazuo {
	okLog 自动打坐开始！;
	#tick auto-dazuo-ticker {
		#if {@char.IsBusy{} || $char[HP][当前精神] < 99} {
			#return;
		};

		#action {你现在内力接近圆满} {
			#if {@char.IsBusy{}} {
				#return;
			};
			dazuo 10;
		};

		#if { $char[HP][内力百分比] < 99 } {
			#if {$char[HP][当前气血] >= 100} {
        			dazuo max;
			};
    		};
    		#else {
        		dazuo 10;
    		};
	} 1;
}

#alias remove-auto-dazuo {
	#untick auto-dazuo-ticker;
	okLog 自动打坐结束！;
}


#alias auto-tuna {
	okLog 自动吐纳开始！;
	#tick auto-tuna-ticker {
		#if {@char.IsBusy{} || $char[HP][气血百分比] < 70} {
			#return;
		};

		#action {你现在精力接近圆满} {
			#if {@char.IsBusy{}} {
				#return;
			};
			tuna 10;
		};

		#if { $char[HP][精力百分比] < 99 } {
			#if {$char[HP][精神百分比] > 80} {
        			tuna max;
			};
    		};
    		#else {
        		tuna 10;
    		};
	} 1;
}
#alias remove-auto-tuna {
	#untick auto-tuna-ticker;
	okLog 自动吐纳结束！;
}

#alias auto-pingdiao {
	pingdiao;
	#action {你凭吊完毕} {
		#delay 1 {pingdiao;};
	};
}
#alias remove-auto-pingdiao {
	#unaction {你凭吊完毕};
}

#alias auto-fullstatus {
	okLog 自动补满状态启动！;
	#tick auto-fullstatus-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};
		

		#if {$char[HP][食物] < 100} {
			eat baozi;
			eat baozi;
			eat baozi;
		};

		#if {$char[HP][饮水] < 150} {
			drink;
			drink;
			drink;
		};
	} 1;
}

#alias remove-auto-fullstatus {
	#untick auto-fullstatus-ticker;
	okLog 自动补满状态结束！;
}

#alias auto-climb-tree {
	#tick auto-climb-tree-ticker {
		#if {$char[HP][气血百分比] < 50} {
			#if {$char[HP][内力百分比] > 49} {
				yun recover;
			};
			#return;
		};
		climb tree;
	} 2;
}
#alias remove-auto-climb-tree {
	#untick auto-climb-tree-ticker;
}

#alias cb {
	yun powerup;
	#tick cb-ticker {
		#if {$char[HP][气血百分比] < 30 && $char[HP][内力百分百] > 30} {
			yun heal;
		}
	} 2;
}

#alias ecb {
	#untick cb-ticker;
}

#alias pfm {
	perform sword.bafang;
}

#alias crosshe {
	ask yi about huanghe;
	#action {上岸吧} {
		#unaction {上岸吧};
		out;
	};
	#action {正等着你呢} {
		#unaction {正等着你呢};
		enter;
	};
	yell boat;
}
