#var shortcut[META] {
	{NAME} {shortcut}
	{DESC} {通用快捷键}
	{AUTHOR} {mnikn}
}

#func shortcut.Init {
	#return true;
}


#alias auto-xue {
	#var auto-xue-target-person %1;
	#var auto-xue-target-skill %2;
	#var auto-xue-times 10;

	#echo 自动学习开始！;
	#tick auto-xue-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		
		#if {$char[HP][当前精神] > 80} {
			xue $auto-xue-target-person for $auto-xue-target-skill $auto-xue-times;
		};
		#else {
			#if {$char[HP][当前内力] < 50} {
				#return;	
			};
			#if {$char[HP][内力百分比] > 45} {
				yun regenerate;
			};
		};
		
	} 1;

	#act {缺乏实战经验} {remove-auto-xue;};
}
#alias remove-auto-xue {
	#untick auto-xue-ticker;
	#echo 自动学习结束！; 
}

#alias auto-xuem {
	#var auto-xue-target-person %1;
	#var auto-xue-target-skill %2;
	#var auto-xue-times 10;

	#echo 自动学习开始！;
	#tick auto-xuem-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};


		recover-jin;

		#if {$char[HP][当前精神] > 1} {
			#math tmp {$char[HP][当前精神] - 1};
			xue $auto-xue-target-person for $auto-xue-target-skill @math.Min{$tmp;50};
		}
	} 2;
}
#alias remove-auto-xuem {
	#untick auto-xuem-ticker;
	remove-auto-dazuo;
}


#alias sshu {
	#local times %1;
	#local book {shediao};
	#if {$times != ""} {
		#nop study $book for $times;
		read $book $times;
	};
	#else {
		#nop study $book for 10;
		read $book $times;
	};
}


#alias sshum {
	sshu 50;
}
#alias auto-sshum {
	okLog 自动检测读书！;
	auto-recover-jing;

	#var auto-sshum-sleep %1;
	#tick auto-sshum-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};
		#if {$char[HP][精神百分比] > 80} {
			sshum;
			#if {$auto-sshum-sleep == 1} {
				sleep;
			};
		};
	} 1;
}
#alias remove-auto-sshum {
	okLog 取消自动检测读书！;
	#untick auto-sshum-ticker;
	remove-auto-recover-jing;
};


#alias auto-sshu {
	okLog 自动检测读书！;

	#tick auto-sshu-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};
		#if {$char[HP][精神百分比] > 80} {
			sshum;
		};
	} 1;
}
#alias remove-auto-sshu {
	okLog 取消自动检测读书！;
	#untick auto-sshu-ticker;
	remove-auto-recover-jing;
};

#alias auto-study {
	#var auto-study-target %1;
	#var auto-xue-times 5;

	#echo 自动学习开始！;
	#tick auto-study-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		
		#if {$char[HP][当前精神] > 70} {
			study $auto-study-target for $auto-xue-times;
		};
		#else {
			#if {$char[HP][内力百分比] == 50} {
				yun regenerate;
				#return;	
			};
			sleep;
		};
	} 1;
}
#alias remove-auto-study {
	#untick auto-study-ticker;
	#echo 自动学习结束！; 
}

#alias auto-studym {
	#var auto-study-book %1;

	#echo 自动学习开始！;
	#tick auto-studym-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		recover-jin;

		#if {$char[HP][当前精神] > 1} {
			#math tmp {$char[HP][当前精神] - 10};
			study $auto-study-book for @math.Min{$tmp;50};
			#nop read $auto-study-book @math.Min{$tmp;50};
			#return;
		};
	} 2;
}
#alias remove-auto-studym {
	#untick auto-studym-ticker;
	remove-auto-dazuo;
}


#alias auto-jing-job {
	#var command %1;

	#tick auto-jing-job-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		recover-jin;

		#if {$char[HP][精神百分比] > 20} {
			$command;
			#return;
		};
	} 2;
}
#alias remove-auto-jing-job {
	#untick auto-jing-job-ticker;
}


#alias auto-lingwu {
	#var auto-lingwu-target %1;

	#echo 自动领悟开始！;
	#action {你的基本功夫比你的高级功夫还高} {
		remove-auto-lian-hp;
		remove-auto-jing-job;
		auto-lian-hp $auto-lingwu-target 1;
	};
	#action {你需要提高基本功} {
		remove-auto-lian-hp;
		remove-auto-jing-job;
		auto-jing-job {lingwu $auto-lingwu-target 50};
	};
	#action {你已经达到你的技能等级极限} {
		remove-auto-lian-hp;
		remove-auto-jing-job;
		auto-jing-job {lingwu $auto-lingwu-target 50};
	};
	auto-jing-job {lingwu $auto-lingwu-target 50};
}
#alias remove-auto-lingwu {
	#echo 自动领悟结束！;
	remove-auto-jing-job;
	remove-auto-lian-hp;
}


#alias recover-hp {
	#if {$char[HP][当前内力] >= 50 && $char[HP][当前气血] < 100} {
		yun recover;
		#return;
	};

	
	#if {$char[HP][当前气血] < 100 && $char[HP][内力百分比] <= 20} {
		sshum;
		sleep;
		#return;
	};
}
#alias recover-jin {
	#if {$char[HP][气血百分比] >= 20 && $char[HP][内力百分比] < 99 && $char[HP][当前精神] > 100} {
		dazuo max;
		#return;
	};

	#if {$char[HP][当前内力] >= 50 && $char[HP][当前精神] < 100} {
		yun regenerate;
		#if {$char[HP][气血百分比] >= 20 && $char[HP][内力百分比] < 99 && $char[HP][当前精神] > 100} {
			dazuo max;
			#return;
		};
		#return;
	};

	
	#if {$char[HP][精神百分比] <= 20 && $char[HP][内力百分比] <= 20} {
		sleep;
		#return;
	};
}

#alias check-sleep {
	#if {$char[HP][精神百分比] <= 20 && $char[HP][气血百分比] <= 20 && $char[HP][内力百分比] <= 20} {
		sleep;
		#return;
	};
}

#alias auto-dazuo-inc {
	okLog 自动打坐内力增长开始！;
	#tick auto-dazuo-inc-ticker {
		#if {@char.IsBusy{} || $char[HP][当前精神] < 99} {
			#return;
		};
		#action {你现在内力接近圆满} {
			#if {@char.IsBusy{}} {
				#return;
			};
			dazuo 10;
			#if {$char[HP][气血百分比] < 30} {
				sshum;
				sleep;
			};
		};

		
		#if {$char[HP][气血百分比] < 30 && $char[HP][内力百分比] < 60} {
			sshum;
			sleep;
			#return;
		};

		
		#if { $char[HP][内力百分比] < 99 } {
        		dazuo max;
			#if { $char[HP][内力百分比] >= 99 } {
        			dazuo 10;
				#if {$char[HP][气血百分比] < 30} {
					sshum;
					sleep;
				};
			}
    		};
		#else {
        		dazuo 10;
			#if {$char[HP][气血百分比] < 30} {
				sshum;
				sleep;
			};
		};
		
	} 5;
}
#alias remove-auto-dazuo-inc {
	okLog 自动打坐内力增长结束！;
	#untick auto-dazuo-inc-ticker;
	#unaction {无法产生内息运行全身经脉。$};
	#unaction {你现在内力接近圆满};
}

#alias auto-tuna-inc {
	okLog 自动吐纳增长开始！;
	#tick auto-tuna-inc-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		
		#if {$char[HP][精神百分比] < 20} {
			yun regenerate;
		};
	
		#if {$char[HP][精神百分比] <= 20 && $char[HP][内力百分比] <= 20} {
			sleep;
			#return;
		};
		
		#if {$char[HP][精力百分比] < 99} {
        		tuna max;
    		};
		#else {
        		tuna 10;
		};
		
	} 2;
}
#alias remove-auto-tuna-inc {
	okLog 自动吐纳增长结束！;
	#untick auto-tuna-inc-ticker;
	remove-auto-recover-jing;
}

#alias auto-dazuo {
	okLog 自动打坐开始！;
	#tick auto-dazuo-ticker {
		#if {@char.IsBusy{} || $char[HP][当前精神] < 99} {
			#return;
		};

		#action {你现在内力接近圆满} {
			#if {@char.IsBusy{}} {
				#return;
			};
			dazuo 10;
		};

		#if { $char[HP][内力百分比] < 99 } {
			#if {$char[HP][当前气血] >= 100} {
        			dazuo max;
			};
    		};
    		#else {
        		dazuo 10;
    		};
	} 1;
}

#alias remove-auto-dazuo {
	#untick auto-dazuo-ticker;
	okLog 自动打坐结束！;
}

#alias auto-lian-hp {
        #var auto-lian-target %1;
        #var auto-lian-need-sleep %2;

        okLog 开始练习！;

	
	#if {$auto-lian-need-sleep == 1} {
		auto-recover-hp;
	};
        #tick auto-lian-hp-ticker {
                #if {@char.IsBusy{}} {
                        #return;
                };

		#if {$char[HP][气血百分比] > 80} {
                	lian $auto-lian-target 50;
			#if {$auto-lian-need-sleep == 1} {
				sshum;
				#if {$auto-lian-need-sleep == 1} {
					auto-recover-hp;
				};
				sleep;
			};
		};
        } 2;
}
#alias remove-auto-lian-hp {
        okLog 结束练习！;
        #untick auto-lian-hp-ticker;
	remove-auto-recover-hp;
}

#alias auto-recover-hp {
	yun qi;
	#action {让气血运行恢复正常} {
		yun qi;
	};
}
#alias remove-auto-recover-hp {
        okLog 结束自动气血恢复！;
	#unaction {让气血运行恢复正常};
}

#alias auto-recover-jing {
	yun jing;
	#action {让自身恢复正常} {
		yun jing;
	};
}
#alias remove-auto-recover-jing {
        okLog 结束自动精神恢复！;
	#unaction {让自身恢复正常};
}

#alias auto-pingdiao {
	pingdiao;
	#action {你凭吊完毕} {
		#delay 1 {pingdiao;};
	};
}
#alias remove-auto-pingdiao {
	#unaction {你凭吊完毕};
}

#alias auto-fullstatus {
	okLog 自动补满状态启动！;
	#tick auto-fullstatus-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};
		

		#if {$char[HP][食物] < 100} {
			eat baozi;
			eat baozi;
			eat baozi;
		};

		#if {$char[HP][饮水] < 150} {
			drink;
			drink;
			drink;
		};
	} 1;
}

#alias remove-auto-fullstatus {
	#untick auto-fullstatus-ticker;
	okLog 自动补满状态结束！;
}


#alias auto-caizhuang {
	okLog 自动踩桩！;

	auto-recover-jing;
	#tick auto-caizhuang-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};
		#if {$char[HP][精神百分比] > 20 && $char[HP][当前内力] > 100} {
			cai zhuang;
			#return;
		};
		#if {$char[HP][精神百分比] == 100 && $char[HP][当前内力] < 100} {
			sshum;
			#return;
		};
	} 2;
	#tick auto-caizhuang-jing-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};
		#if {$char[HP][精神百分比] > 80} {
			dazuo max;
			yun jing;
			#return;
		}
		yun jing;
	} 62;
}
#alias remove-auto-caizhuang {
	okLog 结束自动踩桩！;
	#untick auto-caizhuang-ticker;
	#untick auto-caizhuang-jing-ticker;
	remove-auto-recover-jing;
}

#alias jianxin {
    s;s;s;w;enter jianxinju;
}


#alias auto-long-jing-job {
	#var auto-long-jing-job-command %1;
	auto-recover-jing;
	#tick auto-long-jing-job-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		#if {$char[HP][当前精神] > 80} {
			$auto-long-jing-job-command;
			#return;
		};
		#else {
			auto-recover-jing;
		};
	} 2;
}
#alias remove-auto-long-jing-job {
	#untick auto-long-jing-job-ticker;
}

#alias auto-canju {
	okLog 自动残局！;
	auto-long-jing-job {watch canju};
}
#alias remove-auto-canju {
	okLog 结束自动残局！;
	remove-auto-long-jing-job;
}


#alias auto-sanhua {
	#echo 自动三花开始！;
	auto-recover-jing;
	#tick auto-sanhua-ticker {
		#if {@char.IsBusy{}} {
			#return;
		};

		#if {$char[HP][当前精神] > 80} {
			l wall;
			#return;
		};
		#else {
			auto-recover-jing;
		};
	} 2;
}
#alias remove-auto-sanhua {
	#untick auto-sanhua-ticker;
	remove-auto-recover-jing;
}
#alias gcor {
	get all from corpse;
}

#alias pw {
	yun powerup;
}
#alias pr {
	yun recover;
}
#alias ph {
	yun heal;
}
#alias drawall {
	draw armor;
	draw head;
	draw sword;
	draw boots;
	draw cloth;
	draw surcoat;
	wear all;
	wi sword;
	wear zhanyi;
	wear zhanxue;
}
